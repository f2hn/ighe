#Compile By Sazxt
#My Team : Black Coder Crush
import base64
exec(base64.b64decode("#Compile By Sazxt
#My Team : Black Coder Crush
import base64
exec(base64.b64decode("I0NvbXBpbGUgQnkgU2F6eHQKI015IFRlYW0gOiBCbGFjayBDb2RlciBDcnVzaAppbXBvcnQgYmFzZTY0CmV4ZWMoYmFzZTY0LmI2NGRlY29kZSgiSTBOdmJYQnBiR1VnUW5rZ1UyRjZlSFFLSTAxNUlGUmxZVzBnT2lCQ2JHRmpheUJEYjJSbGNpQkRjblZ6YUFwcGJYQnZjblFnWW1GelpUWTBDbVY0WldNb1ltRnpaVFkwTG1JMk5HUmxZMjlrWlNnaVNUQk9kbUpZUW5CaVIxVm5VVzVyWjFVeVJqWmxTRkZMU1RBeE5VbEdVbXhaVnpCblQybENRMkpIUm1waGVVSkVZakpTYkdOcFFrUmpibFo2WVVGd2NHSllRblpqYmxGbldXMUdlbHBVV1RCRGJWWTBXbGROYjFsdFJucGFWRmt3VEcxSk1rNUhVbXhaTWpscldsTm5hVk5VUWs5a2JVcFpVVzVDYVZJeFZtNVZWelZ5V2pGVmVWSnFXbXhUUmtaTVUxUkJlRTVWYkVkVmJYaGFWbnBDYmxReWJFTlJNa3BJVW0xd2FHVlZTa1ZaYWtwVFlrZE9jRkZyVW1waWJGbzJXVlZHZDJOSFNsbFJibHBxWW14R2JsZFhNVWRsYkhCVlYxUkNSR0pXV1RCWGJHUk9ZakZzZEZKdWNHRldSbXQzVkVjeFNrMXJOVWhWYlhoYVRXcHNjbGRzVG01aFZrNVZVV3M1YTJKVmNGcFZWelZEWVZaSmVGWnROVlpXZWxaNVYycEdWbVZXU25GWGJYaFVVbXRhVFZVeFVrSmxSVFZXWWtWa1ZtSllhR0ZXYm5CRFlteFJlV0pGVGxKTmEzQkpWVzB4ZDJGSFZsWlRhMVphWVd0d1ZGbHJaRTlqUmtaeVZXMXdhV0pHYnpKWFZsWkhaREpPU0ZOc2JGSmliSEJ4V1cxNFIySnNaRmhOVldSc1lraENWbFl4VWtOU1IwcFhWMVJDV0dKSFVrOVpha1p6WkVaS2RXTkhSbGRTYlhRelZrVmplRk5yTVhKT1ZXaFdZbGhvWVZSWGNITmpiR1J6VkcwMWFGWnJOVlpWVjNNMVlUSktWbU5HY0ZaV2VsWkVXVlphU21WR1duUk9WbHBYWld4YU5WWXljRWRXYlZaWFUyNUdXR0pZYUZWVmJYUmhWRlpWZUZWclNteFNWRlpYV1d0V2ExWnRTbGxoUjBaWFltNUNSRmx0ZUZKbFYwcEdWR3hLVG1FelFrcFdWekI0WkRKR1NGWnNXbFJoTVZwaFdWZDBkMVpHYkhKYVJUbHFVbXRhZVZaWE1YZGhWMHBIWW5wS1dGWnNXa2hhUkVwUFUwWk9jMkpHU21saVNFSjRWMWN4TkZJeVNuTmFSbWhPVmxkU2MxbHJhRU5XYkZsNFZXdE9VMUl3Y0ZoV01WSkRWMGRLU0ZWck9WcGhhMXA2V2tWYVMyUlhUa2hTYkdSVFlsaFJlbFpyVm1wbFJrNXlUVmhLVDFaWGFGZFpiR2h2V1ZaU1dHTklUbXBpUjFKNlZrY3dNV0ZHV25KT1ZscFdWak5OTVZsVVNrdFdiVTVIWTBaYVYyVnNXa1ZYVmxwaFUyMVdSMWR1VWs5V2JIQllXbGQ0WVU1V1dYbGpSV1JYWWxaYVdGVXlOVWRYUjBwWllVWldWbUpZVW1oV1JscFdaVVpXY2xOdGVGTldSbHBZVjFkMFYyRXhXblJUYkd4b1VqQmFXRmx0TlVOU1JteDBaVVpLYkZZd2NFZFdSM2hMVkcxRmVsRnJjRmRXZWtJMFdrUktSMU5HV25OWGJGSm9UVlp3YUZkV1pEQmtNVnBIWWtoS1lWSlViSEZWYlhSaFpWWmFXRTFZWkdoV01IQklXVzV3UzFkR1duTlhhMmhoVWtWd1VGVXdXazlqTWtwSFUyMXNhVk5GU2pSV01XTjRUa1pKZVZOdVRtRlNiV2hQVm14a1UyTXhiSEpoUlU1WFlrWnNORlpYZEU5Vk1VbDNZMFpvVjAxV1NrUldNR1JMVTBaV2NrOVdjR2hoTVhBMlYydFdZVk15VWxoVWEyaFRZa2RTVkZsc2FGSmxiRnB5Vm0xd2JGSnJOWGxVVm1oTFZERmFXR0ZHWkZwaVIyaDJWMVphVTFkSFRrbFViWEJwVWpGS05sWnJZM2ROVjBaSFYyNUtUMVpzY0ZkV2FrNU9UVlpzVlZOcmRGZGlWVFZJV1RCYVlWWXlWbk5YYTFaWVZteHdhRlV5TVZkU01XUjFWV3M1VjJKSVFsbFhiR1EwV1ZVMVYxZFliR3BTVjFKWVdXeGFZVmRHVlhsT1ZXUllVakJ3V2xsVldsZFdiVXBaVlcxb1YxSnNjRmRhVlZwWFkyeE9kR1ZHVGxkU2JIQlpWakZrTUZZeVJYaFhibEpVWWtkNGIxVnFRbUZYUm14MFRsVk9VMUp0ZURCYVZWcExZa1paZDJORlpGZFNNMmhNVmtjeFJtVnNSbkpqUm1SWFpXdEpNRmRyVWt0U01VNUhWMjVPV0dKR1NtOVVWbHAzWVVaa1YxcEVRbXROVm5CSVdXdG9TMWxXU2xWaVNFWldZbGhTYUZwV1dtRlhSVEZaV2tkb1YwMUlRa2xYVnpWM1V6RmtSMWR1VGxoaE1taG9WV3RXZDFWR1ZYZFhhemxxVFd0d1NGVXlNWE5oVms1R1UycFNWMDFYVGpSVWExcEtaVlpPZFZSdFJsTmlWMmhRVm0xNGExVXlUWGhpU0Vwb1VsVTFXRmxyV25OT1JscFlaRVU1VmsxVmJETlpNRnB2VmpBeFYxTnJVbGROUjFKTVZUQmFWMk5yT1ZkalIyaG9UVmhCTWxZeWRGZFpWazE1Vld4b1ZXRXlhRlJaYTJSVFZrWnNjMkZHU214aVJuQjVWbTB4ZDJKR1NuSk9XR3hWVm0xb1RGWkVSbUZYUjBaSFdrWndhVkl5YURKV01WcGhWVEZrU0ZScmJGVmlXRUp3VldwR1MwNXNXbkpaTTJST1ZqQmFTRll5TlV0VU1WcHpZMFprVjJGck5VOVVWbHB6VmxaT2NtUkdaR2xXVkZaSlYxUkNZVmxXV1hsV2JrNVlZVEZhV1ZadGVIZGhSbFY1VFZaa1UwMVhVakZXVjNNMVZqSktTVkZzYkZoaVIxRXdWMVpWTVZZeFpGbGlSM0JUVmpGS1dWZFhlR0ZaVm1SSFZsaHNUMVpYVWxsVmFrSjNWMnhzVmxkc1pGZGlWWEJhVmxjeGIxWXhTbk5qUm1SaFZsWndXRmt5ZUU5a1IxWkhWR3hrVTJKSVFscFdha1pyVFVaWmVWSllhRmhpYkVwVldXdGtOR0l4Vm5GUmJVWllVbTE0TUZSc1ZrOVZNVXAwWlVSQ1lWWldjRXhaYTFwYVpESk9SbHBHWkZOTk1taE5WbXRqZUZKdFZuTlNia3BxVW0xU1dGcFhkRXBOUm1SeVZXdDBVMDFWTlVoV01qVlBWMGRLUjFOdE9WVldiSEF6V1ZWYWExWXhjRVZSYlhST1ZtNUNTVmRYZEc5VE1XeFhVMnhXYVZORldsZFpiR2hUWVVad1YxZHRSbGhTVkVaYVYydGtiMVl3TVVsUmEyeFlWbnBXTTFWNlJtdFNNV1IxVkd4b2FFMXRhRzlXVjNSWFpERldSMVpZWkZoaGVteHhWRmQwZDFOR1ZYbE5XRTVvVm1zMVIxVXljRk5XTURGWVZHcFNWV0V4Y0V0YVZscFBaRlpTZEZKc1RtbFdNbWhSVm0weE5HRXhWWGxVV0docFUwVndiMVZzVlRGWFJteHlWMjVPVDFKc2NGbGFSVlUxVm1zeFZtSkVUbHBOUm5CMlZtcEJlRll4VG5KVmJHUk9VakZLVFZaVVFtRldNazV5VDFaa2FsSXlhRzlVVm1oQ1RXeFplV1JHWkZwV2F6RTFWbGQ0YjFaWFJYbGhSbEphWVRKU1ZGWnJXbk5qTWtaSFUyMTRhVkp1UWpWV2JUQjRaREpLUjFOdVNrOVhSM2hXVm0weGIxUkdXa1ZTYlVaWVVqQmFTRmRyV25kaFZrbDVZVVJLVjAxV2NHaFdWRVpyVTBaU2NtSkdWbWxYUlVwM1ZsZHdSMU13TlhOWGJrcGFUVEpTVDFacVFtRlRSbGw1VGxWMFZVMVdjSHBaTUZwclZqSkdjazVWT1ZWV2JIQjZWbXhhVDJOdFVrZGFSMnhYVmtaYVNsWXhVa05aVm14WFYxaHNWMkpyTlZsWlZFWmhWMVphZEdWSVpHaFNiRlkxVkZaYWExVXdNVmhWYWtaWFZqTk5NVlpxU2t0VFZrWnpZa1pvYVZJeFJYZFdNVnBXVFZaWmVGcEdiR2xTTTBKVVZtcEdTMWRXWkZobFIwWmFWbTFTU0Zac2FITlVNVnBZVld4c1ZtRnJTak5XTW5oelZteGtjMXBHWkdsV1dFSmhWbXhqZUdJeFdYaFRiazVxVW0xU2FGWnNXbmRYUm10NVpVVTVhMUl4V2toV1IzaHJWVEpLU1ZGc2NGZGhhMXB5VkZWYVdtVldTbGxoUm1ocFlrVndWbGRYZEd0T1IwbDRWbTVHVW1KVldsbFZiVEUwVFVaU2MxWnJPVlpOVlhBd1dsVlNRMWxXV2xkalJYaGFZVEZ3WVZwRVNrOVNiSEJIV2taT1RrMXRhRTVXYlhScVpVWktkRlp1VGxOaWEzQnhWVzB4VTFkR2NGaGtSWEJPVW0xU2VWWlhkREJWTURGV1RsVm9WMDFxVmxCV01HUkxVakZPZEU5V1ZsZGlTRUY2VjFaV1lXRXhXWGhqUlZaU1lsaFNUMVp0TlVOVFZtUllaRWM1VkUxWGVGaFZNbmhYWVZaT1JsZHNaRnBpUjJoVVdWVmFkMVl4WkhSU2JHaFRWa1ZhWVZZeWRHdGlNVmwzVFZWc1VtRXllRmxXYm5CWFRURldObEp0ZEZOTlYxSXhWa2Q0YjJGRk1YUmhSemxYVmpOU1dGcEVSbGRTTVZwWldrWm9hR1Z0ZUhoV1JtUXdaREZPUjFaWWJFNVhSVFZ2Vm0xek1WSXhWWGxqUms1WFRVUkdXVlpIY0ZOV1YwVjRZMFYwWVZac2NGQmFSbHBUWkVaS2MxUnRiRmROYldoU1ZtMHdlRTVIUlhoV1dHeFZWMGRvY0ZVd1ZuZGlNVlp6VmxSR1dGSnRlSGxXTWpWUFZERktjMk5HYkdGU1ZsVXhWbTF6ZUZadFNrVlViSEJPVW01Q01sWnRjRUpsUmxsNFZHNUtWbUpIVWs5VmFrWkxWRlphVlZGdFJsZE5helY1VkRGYWEyRnNTWGxoUnpsVlZtMW9RMVJYZUZwbFYxSkhXa1p3VjJGNlJURldiR1EwWWpGYVdGSlliR2hTYkVwaFdWUktVMVpHV25KWGJrNXFUV3RhU0ZVeU1UUmhWa3AxVVdwV1YySlVRalJhUkVwTFVqRk9kVk5yT1ZoU00yaFhWbTB3ZUdJeFVrZFhhMVpUWWxWYVdWVnFRbUZUUm1SeVYyNWthRlpyYkRWWlZWSkxWakF4VjJOSGFGZFdSVnB5VlRCYVUyTnRTa2RXYld4WVVsVndNMVpzWkhkU01VMTNUbGhPV0dKcmNHRlVWRXBUVkRGYWNWRnRSbFJTYkd3MVZHeFdNRlpWTVZkalNIQmFUVVp3Y2xacVNrZGphelZXVDFaV1YySklRalpXYlhoaFZESk9kRlZyWkdGU01uaFlWbXRhWVZOc1dYaFZhMDVhVm0xNFdGWXhhSE5XTWtweVRsWnNXbFpGV21oV01WcGhaRWRXU1ZwSGFGTmlSbGt4VmtaYVlXRXhWWGROVm1oV1lXdGFXRlpxVGs1TlZscHhVMnQwVkZaclducFphMXB2WVZaSmVGSllaRmROVm5CWFZGWmFXbVZHY0VkaVIyeFRUVEJLVlZadGNFZFRNV1JYV2tab2JGSXdXbUZXYlRGVFUwWmFjMkZJVGxWTlZuQlpWbGQ0YzFadFJuSlRhazVYVFc1b2VsWnRlR3RqTVhCSFdrZHNWMWRGU21oV2JYaHFaVWRKZUZkWWFGUmlhelZ4VlcweFUyRkdXbk5YYm1SWVVtMTBOVnBWVlRWaE1VbDRWMnRvVjFJemFISldWRXBMVTFaR2MyTkdaR2hoTVhCNVZrWldZVmR0VmxkVGJHeG9VbTFvY0ZsclZuZFdiR1JZWkVkMFQxSXdiRFJXYlRWSFZXMUtWbGRzYkZaaVZFVXdWRlZhVTJNeFduSlBWbHBPVmxoQmQxZHNWbE5STVd4WFYyeGthbEpZYUdGWlZFWjNXVlp3UlZOck9WTmlTRUpJVjJ0YVQxUnJNWFJoUlRWWFlsaFNjVnBWV2t0a1JscDFWR3hPYVdFelFuaFdWekI0VlRGa1IyTkdhR3RTV0VKUFZXMHhVMlZXV2xoa1JFSldUVVJHVjFSc1ZtOVdNREZ4Vm14Q1YwMUhVa3hWYWtaUFpFVTVWMVpzWkdsVFJVWTJWakZhVjFsWFJYaFhXR2hxVWxaYVUxbHNhRk5VTVZwMFRsVk9WRlp0VWxsYVJXTTFWa1V4V0dWR2FGWk5ibWhZV1ZaYVQxSnNaSE5hUm5CcFVqSm9WVmRXVm1Ga01WbDRXa2hTVTJKSGFGUldhMVpoV1ZaWmVXUkhkR2xOVm13elZGWldjMVZ0UlhsbFJteFhZbTVDV0ZSVVJsZE9iRXAwWkVaT1RsWXhTWGhXYTJRMFlqSkdSazFZVW1oU2VteFlWbXBPVTFkR2NFVlNiR1JUVFZad1dsZHJXbTloUjFaMFpVaG9WMUp0VVhkYVJFWlBVakZhV1dKRk5WaFNWRloyVm0weGVrMVdTWGhXV0d4cVVtczFXRlJWVWtkWFZscElZMFpPVjFZd1ZqUlpNRll3V1ZaYWMyTkdRbUZTYkhCVVdrVmFTMk14VW5SaVJtUk9ZbGRvVTFadE1IZGxSVFZJVWxob1YxZEhlRlpXTUdSdlkwWlZkMVp1WkdsTlZscDZWbXhTUjFkR1NuUmxTR3hYVFdwV1VGWkVSa3RqTWs1SFlrZEdVMVpzVlhoV2JURjZaVVphZEZOclZsVmlTRUpQVlcwMVEwMXNXblJqUlVwc1VteHNORlpITlV0V2JVcElWV3M1Vm1GcldreFdSbHBoVmxaR2RGSnNaRTVoZWxZMVZrUkdZV0V5Um5OVFdHeG9VbnBzVmxadE1XOVJNVkpZWlVad2JGWXhTa2hYYTFwM1ZqSkdObEpVUmxkaVIxRXdXV3BHWVZkR1NsbGlSMmhUWWtWd2FGZFdVa3RWTVZwSFYyNUtXR0pyTlhGVVYzUmhVMFpWZVUxVVVtaFdhM0F4VlZkd1YxWXlTbFZSYWxKaFVrVndURlZxUms5a1ZrNXlUMVpvVTAweWFGaFdiVEIzWlVkSmVGVnJaRmhoTVZwVVdXeFdZVmRXVm5GUmJVWlVVbTFTZVZZeU5XdGhSbHB5WWtSV1dsWldTa3hXYWtGNFZqSk9TR0ZHWkZkU1ZuQjVWbFJDWVZVeVRuUlRhMlJYWWxkNFdWVnNWbmROTVZweldraGtVMDFWTVROVWJHaFBWMGRLY21OSFJsVldSWEJVVmtSR1lXTldSblJTYkZKVFlrZDNNVlpIZUZkTlJscFdUVlprYWxOSVFtRlVWVnAzWTJ4YWNWTnJaR3BoZWxaWFZERmFWMVl5U2tsUmFscFhZbGhvYUZaRVNrOWtSbFp5V2tkR1UwMXVhRmxXYlhSaFdWWk9jMWRZYUZaaE1EVmhWbTB4TkZkR1dYaGhTRTVYVFd0d2VWUnNXbk5YYkZwR1YyMW9WMDFXY0doYVJXUlhVMVp3U0dGR1RtbFNiR3Q0Vm10YVlWbFhSWGhXV0dST1ZtMW9WMWxYZEdGWFJscHhWR3MxVGxac2NIaFZNblF3VmtaYWNsZHVjRnBoTVhCMldWWmFTbVZHU2xsYVJtUk9WbTVDV0ZaR1dtRlhiVlpIWTBWa2FWSXllRlJVVkVKTFZsWmFkR05GWkZSTlYxSllWMnRhYjJKR1NYZFhiVVpYWWxSR1ZGVXdXbUZqTWtaSlZHeFdUbFp1UWxwV2JHUTBZekZhZEZKdVNsUmhhelZZVkZjMWIyVnNXblJsUjNScVRWaENTRmRyWkhOV01XUkdVMjFvVjJKWWFIRmFWV1JLWlVaa1dXRkdVbWxoZWxaNFZsY3dlRlV5UmtkWGJrNVlZbTFTV1ZWdE1UQk9WbkJXVmxSV2FFMVZiRFJXTW5SdlZqRkplbUZJU2xkV1JYQk1WVEZhUjJNeVRrZGFSMmhvVFZoQ05WWnJXbGRaVm1SMFZteGtWR0pIZUc5VmJURnZZMFpzY2xadVpGZGlSMUpaV2tWa01GUXhTWGRpUkZKWFlsUldTRlpYTVV0V2JHUnpZa1phYVZaRlZYZFdSbFpoVlRKTmVGZHVTbEJXYkhCUFZteG9RbVF4WkhOV2JFNVNUVmQ0V0ZZeWVHdGhiRXBaWVVkR1dsWkZXak5YVmxwM1VsWk9jazlXVG1sVFJVcEpWakowWVZReFVuSk5XRkpvVWxSV1dGbHNhRk5qVm5CV1YydDBhMUpzY0RGV1IzaFBZVmRGZWxGdWFGZFdla0kwVmxSR2ExSXlUa2RoUjNSVFYwVktVRlpYTUhoVk1sWlhWMnhvYTFKRlNsZFVWVkpIVmpGU2MxWnRPVmROUkVaNFZtMTRRMVl3TVVoVmEzaFdZV3RhVUZwRlZUVldNVnB6V2tkc1ZGSlZXVEpXYWtaaFZqRnNXRkpZYUZoWFIyaHhWV3hhWVZVeGJITmhSazVWVFZad01GUnNWazlXUmxwMFZXeHNZVkpYVFRGV2ExVjRWMGRXUjJGR1drNWliV2haVjFaYVlWUXhTbk5hU0U1aFVtNUNjRlZxU205V1ZtUlhWbTFHYTAxV2JEUlhhMmhUVlRKS1NHRkdVbGRoTVZwb1YxWmFXbVZYVWtoa1IyeE9WbTEzZWxaR1dsZGpNVlowVWxoc2JGSnRlRmhaYlRWRFYwWlNWVkpzWkU5aVJYQXdXa1ZhVDFSc1dYaFRXR2hYWVRKUk1GbHFTa2RTYXpGWlZXMW9VMlZ0ZUZsV2JYQlBWVEZrUjJORlZsTmlSMUpVVkZaYWQxZHNaSEpYYlRsb1VqRmFNRnBWYUc5V01VcDBWVmhrWVZKRldsQlZha1poVjFkS1JrNVdhRk5XUmxveVZtMHdlR1ZyTVZkVFdHaFhWMGQ0Y1ZWdGN6RlhSbEpXVld0a1dGWnNjRWxaTUZwUFZqRlpkMVpxVWxwTlJsbDNWMVphWVdNeVRrZFJiVVpUWWtoQ1ZWZHJWbUZUTWsxNFZXNVNhVkp0VWs5WmJHUnZWVEZhZEUxSVpHeFNWRlpKVld4b2IxWXhaRWhsUmxwWFRVZFNkbGt3V2xaa01WcDFXa2RzVGxac2NEWldiWGhUVWpGa1IxTnVVbXhUUjNoWVZGZHdWMVZHV2tWU2EzUnFUV3MxU0ZsclpFZFZNVnB6Vmxob1YySlVSalphVlZwaFpFWk9jbFpzVm1sVFJVcFFWbGN3TVZFd01YTlhibEpxVWxWd2MxVnRlSE5PUmxwSVRsVjBWMkpWY0VsV1YzTTFWbTFHY2xkcmVGZFNiSEJvVm14YVIyUkdTbk5hUlRWb1pXeFpNVlpyVWtkWlYwVjVVbTVPVkZkSGVHOVZibkJ6Vm14YWRFMVhPVkpOVmtwWldsVmFkMkpHV1hoVGEyaFlZVEZ3TTFacVNrZE9iRXBWVW14a2FWSXhSWGRYVjNCSFdWWmtSMU5zYkdsU01taFVXV3RXZDJGR1pGZFZhM1JXVFZad1NGWXlOVXRYUjBweVRsaEdWVll6VW1oVk1GcFdaVlV4VlZWdGFGZGhNMEY0Vmxaa2QxWXhXWGxUYkZaU1lXeEthRlZyVm5kVVJsWnhVbXM1YTFack5YbFVNVnB2VlRBd2VXRkdhRmRpVkVJeldsVmtTbVZHVm5KYVJtaG9UVlp3VlZkWGVGZFpWbVJYVm01R1VtSlZXbFZWYlRGVFpWWlplVTVYZEdoU2JIQjVXV3RTVjFkc1dsZFRhM2hYWVd0R05GWnFTazlUUjBaSFdrWmtVMVp1UWpWV2JGSkRXVlpWZVZSdVVsUmhNbEpZV1d4a05GZFdWbk5XYm1ST1RWWndlbGRyYUd0Vk1ERldUVlJPVldKSGFGQldNR1JMWTIxT1NGSnNWbGRTV0VKVlZtdFNSMWxYVGxkU2JsSlRZa1pLVkZsclpETk5WbHBJWlVaa1RsSnNjRmRVVmxwcllXeE9TVkZ0UmxWV1ZuQXpXVEo0WVdOV1RuSmFSM0JvWld4YVdGWkVSbUZXTVZsNVUydHNVbUZzY0ZoWmJHaHZZVVphUlZOck9XdFNiRnA1VjJ0a1IxVXdNWFZoUm14WFlsaFNhRmRXV2s5ak1XUlpZVVphYUUxRVZtaFdiVEI0VGtaa1IxZFlhR2hUUlRWWVZGZDBkMlZXVW5OWGJrNVlZa1p3UjFZeU1XOVdNREZYWTBkb1lWSlhVbGhWTVZwM1UwZEdSMVJ0YkZOaVIzUTBWbTEwWVZsV2JGaFNXR2hYVjBkU1QxWnRNVzlXTVd4WVpFZEdXRkpzY0hoV1IzTXhWR3hhYzJOSWFGWk5ibEYzVm10YVlXTnNaSFZqUm5Cb1RWaENNbGRXV21GVGJWWkhVMnhzWVZKdFVrOVdiVFZEVjBaYVIxZHRSbGhpVmxwSVdUQldhMkZXU1hsbFJsSlZWa1ZLVEZac1dtRmtSMDVHV2taU1RsWXhTbGxXTW5SaFlqSktSMU5ZWkZoaVZWcFlXV3hTUjFaR1ZYZFhiVVpxVFd0YVNsWkhlRmRVYkZwMVVXeHdWMkpIVVRCWmVrWmhaRVpLZFZOc1VtaGhlbFpaVmtaak1XSXlWbk5YYmxKc1VqTlNjVlJXYUVOVFJtUnlXa2hPVjAxWFVrZFZNakZ2VmpKS1dXRklSbUZXVjFKTFdsVmFhMWRYUmtkVmJXeG9aV3hhTkZac1kzZGxSbFY1VW10a1dHSnJOVmxaYlRGVFYxWldkRTFVUWs5V2JrSlhWbXhTVjJGRk1WWmlSRkpYVFc1U2RsWnFSa3BsYlVaSlUyeGtWMUpZUWsxV1ZFWmhVakpOZVZSclpHRlNNbWh2VkZab1EwNVdXbkpYYkdSYVZtMVNNRlp0ZUd0V1IwcElaVWM1Vm1KVVJuWlpNRnB6WTJ4YWRWcEdaR2xTTVVwYVYydFdhMDFHVVhoVFdHUnBVa1pLV0Zsc1VsZFRSbHBZVFZWMFYySkhVbnBaYTFwaFlWWmFSbFpZWkZkU2JGcG9WbFJLVG1WR1pIVlRiRUpYWWtoQ1VGWnRlRzlSYlZGNFdraE9WMkpGTlZOVVZtUTBWMFpaZVdWSGRHaGlSWEJhV1ZWa1IxZHNXa1pYYWs1WVZteHdNMVZzV2s5amF6bFhWRzFzVkZKVmNFcFdha293V1ZaUmVGVnVTazVYUmtwdlZXeFNWMWRHYkhOaFJrNXFWbTVDVjFZeWREQmhNVXB6WTBSR1YxSXphRkJaVm1SR1pXeEdkV0ZHWkZkbGEwa3dWbXhTUjJFeFNYbFVhMlJvVWpOU1ZGWXdWa3RWUmxwWVRVaG9WazFzV2xoV01uaHZZVEZLUmxOc1pGVldWa3BJVm1wR1UyTXhXblJQVm1ST1VrVmFORlp0TVRSUk1WbDNUVlZvVm1FemFGZFpWM1JoVlVad1JsWlVWbGROVm5CNlYydGtjMVpHU2xaWFZFcFhZV3RhYUZacVJuTlhSa3BaWVVab1dGSXlhSGhXVjNoaFdWWlZlR0pJVG1oU2F6VldWRlphZDAxR1VuTldhemxYVW14d01GWlhlSE5aVmtwWVZGUkdWMkV4VmpSV01HUlhVakpHUjFkck5XbGlWMmhhVmpGYVlWbFdVWGhUYms1aFUwVTFhRlZ0TlVOalJsWnhVMjA1VjFadFVsaFdiVEZIWVRBeFYySkVVbGhoTW1oVVZsUktTMU5IUmtkVmJHUm9UVlp3YjFZeFdtRlhiVlpZVld0b2ExSXllRTlXYlRFelpXeGFSMWRzWkdwTlZsb3dWV3hvYzJKR1NuUmxSbWhhWWxSV1JGWXdXbE5XVmtweldrVTVhVkpZUVhkWGExWmhWREZTYzFkWWFGUlhSMmhZV1ZSS1VrMUdiSEZUYTJSVFlYcEdXbFpYTVc5Vk1sWjBaVVpzVjJKWVFsQldWRVpyVWpKT1JsWnNUbWxTTVVwVlZrWmFZV1F4WkhOYVNFcFlZbFJzYjFWcVJtRk5SbkJXWVVjNVYwMVZjREJXVm1ocldWWktSbGRzUWxaaGExcG9WakZrUzFKck5WZGhSazVYVW14dmVWWnRNSGRsUjFaeVRWWmtWRmRIYUZoV01HUTBZMVpXZEdONlJsaFNiRXBYVmxkMGExZEdXbk5qUld4YVRVWndVRlpxUmxwa01WcHhWV3h3VGxKc2JETldNVnBoV1ZkTmVWUnJaRkppVlZwVVdXdG9RMVpXWkhKV2JVWlVUV3N4TkZaWE5WTmhWa3AwVldzNVdtSkhVblpXVkVaaFpFVXhTVnBIZUZOV1JscEtWbGQ0YjJJeFdYaGFSV2hzVW14d1dGUlZaRk5rYkd0M1YyeGFhMDFXY0RGWGEyUnpWR3hhYzJORVdsZGlXR2hVVldwR2ExSXhUblZWYlhoVVVqTm9XVlpHWkhkV01WWkhWMnRXVTJFelVuRlVWM014VTBac2NscEZaRlpOVm5CNlZteG9iMVl5U2xWU2FscGhWbFp3YUZwRldrOWpiRnB6Vm0xc1ZGSlZjRkZXYkdOM1RWWkZkMDFZVGxoaWJFcHhWV3hXZDJNeFZuUmxTRTVQVW14d1NWUnNWakJXTWtwV1kwVnNWMVl6VFRGV2JURkhZMnhrY21WR1pGTmlTRUp2Vm0xNFlWSXlVa2RUYms1aFVsUldiMXBYZUZwTlZscHlWV3RrV2xZd1ZqVlZiVFZQVmtaa1NHVkhPVlppYmtKNlZtMTRZV1JGTVZoUFZrcE9WbXR3V2xkc1ZtRmtNa3BIVjFob1ZHRXlhRmxaVkVaM1RURmFjVk5yWkU5aVJYQldWVzE0YTJGV1NYaFNXR1JZVmpOQ1NGZFdXbXRTTVU1ellrZHNVMDF0YUZWWFYzUlhaREpHUjFwR1pGWmhNMUpYVkZaYWQxTkdXWGxPVlhSWVVqQndlVlJzYUVkV1ZsbDZWVzFvVmsxR2NGZGFWbFY0VmxaV2RHRkdaR2hOTUVZMFZteGFhMlF4V1hoWFdHeFVZa1phVTFsWGVFdGhSbFp5Vm01a1ZWSnNXbmhWYlhNMVlURmFjazVZYkZWTlZuQjJWbFJCZDJWWFJrZGhSbVJwVmtWSmVsZHNWbXRUYlZaSFZtNUtZVkp0YUc5VVZscDNWbFprV0dWR1pGcFdiVkpZVm0wMVIxVnRTbFpYYkZaV1lsUkdWRnBXV2xwbFZUVllaRWRvVTJKSVFqVlhWM1JUVmpGa2MxZHNaRlJoTTJoWVdWZDBSMDVHV25GVGF6bFVVakJhU0ZkcldtdFZNVnAxVVdwV1YySkdTa1JYVmxwV1pWWlNkVlZzVW1oTmJFcFpWMWQ0YTA1R1pGZFdiazVYWW0xU1QxUldXbmRsYkdSeVlVZDBWazFFUmxkVVZsSlBWbGRLU0dGR1FsZE5SMUpNV1RJeFQxTkdTbk5XYkdSVFYwVktWbFp0ZEZOU01XeFlWR3hrVTJKc1NsUlphMXBMVmtac2NscEVUazVXYkhCSldsVmFhMVJzU25OalJtUlZWbXh3Y2xsWGVFOVRWa1owVW14V1YxWnVRWHBYVkVvMFdWZE9WMVJ1U21GU00wSnZXbGQ0WVZkR1drVlNiVVpYVFZac05WVXlkSE5WYlVaelkwWm9XbUpIYUhaWlZWcGhVbFpPY2s5WGRGTmlSbkExVmpKMGExSXhWWGROV0Zab1VtMTRXRmxzYUZOaFJtUlhWMnM1YWsxWFVscFpWVnBoWVVVeFJWWnRhRmRpVkVJMFZHdGFhMUl4WkZsaFIyaFVVbFJXV1ZaR1pEQmtNbFpYVlc1T1dHSnJOVmxaYTFwM1VqRlplVTFYT1ZkTlJFWllXVEJrYjFsV1NsaFZiR2hXVFZad00xVXdaRWRTTVZKMFlrWk9hVkl6VVRCV2JURXdXVlpzVjJKR2FGTlhSMmhZVmpCa1UxUXhXblJOVnpsWFRWZDRXVnBGWkVkWFJrcHpZMGhvVjFJelRYaFdSM2hoWXpKT1NXRkdXazVpYkVZelZtMTBZVmxYVG5OYVNGWnFVbTVDYjFSV2FFTk5iR1JYVjIxR1ZHSldXa2hWTW5oeldWWktkRlZyT1ZkaVZGWkVWakJhWVZJeFpIUlNiR2hwVm14d1NWZFVRbGRoTWtaWFUxaHNiRkpzU2xaV2ExWkxWRVphYzFkdFJtdFNNRFZIVjJ0YVUxUnNXWGhUYkd4WFRXNVNhRmxxU2t0U01VNVpXa1pvYVZaV2NGbFhWM2hUVWpGYVIxWllaRmhpVlZweFZGZDBZVk5zV2tobFJtUlZZa1p3TVZWWGVIZFdNa3BJVlZSQ1dtVnJXbWhhUlZwTFpGWk9jMVZ0YUdobGJGcGFWbXRhYWsxWFNYbFdiazVZWW14S2MxVnFUbE5qVmxKWFlVVk9WRkp0VW5sWGEyaFBWakF4V0ZWclpGWk5ha1oyVm1wS1MxZFhSa2xTYlVaWFZqRktURmRzVm1GaE1XUllVbXRrVm1KWGVHOWFWM2hoVGtaYWMxa3paR3hTYkZZMVZXMTBhMWRIU25KT1ZteGFZbFJHVkZZeFdsZGtSVEZWVVdzNVYySnJTbGhXYlhoVFZqSkdSazFXV21sU1JrcFlWRmMxVTJSc1duRlNhM0JzWWxWYVNsVXllR3RXTVVwWlVXc3hWMVpGV21oVmFrcE9aVlpTY2xwSFJsTk5iV2gyVmtaYWIxRXdOVmRYYmtwWVlrZFNZVlp0TVZOTlJscDBaVWQwVjFJd2NFbGFWV00xVm0xS1ZWSnVXbHBOUm5CNldUSjRZV1JXY0VkYVIyeFRUVlZ3WVZZeWRGZGhNREZIVlZob1ZGZEhVbkJWYTFwTFYwWnNjMVZzWkZSU2JIQlpWRlpXTUZZeVNraFZibkJhWVRGd2FGbFdXbUZTYkZwWldrWmtVMkpHY0c5V2JGSkxWRzFXUjFwSVZsUmlSVXBZV1d0b1ExVkdXblJsUnpsU1lsWkdORmRyYUU5V01rcEdUbFpPVlZadFVUQldNRnBhWlZkV1NHUkhhR2xTV0VKaFYxWldhMUl4WkhOWGExcFlZV3MxV1ZadGVIZE5NVlp6VjJzNWFtRjZiRmhXUnpGelZrWktWbU5GY0ZkaGEyOTNWMVphVW1WR1ZuVlRhelZZVW10d2RsWlhlRk5XTVdSSFlraE9hRkpyTlhGV2JUVkRWakZaZVdSRVFtaE5WWEI2V1RCU1IxWXhTWHBoUmtKYVZtMVNSMXBYZUVka1YwWkhXa1prYkdFd2EzZFdiWGhUVWpKRmVGTlliRlZoTWxKdlZXcE9VMVpHV1hkV2EzUldVbXh3V1ZSVmFHOVdhekZ6VjJ4b1YwMXVhSFpaVkVaTFVteE9jMXBHVmxkV2EzQkpWbTF3UjFVeVRYaFhibEpRVm0xU1QxVnJWbUZPUmxwMFRWUlNVazFXYkROVVZsWnZWbTFGZW1GR1pGcFdNMUpvVmxWYWQxSnNXbFZXYkdST1ZtNUNObFl5ZEd0ak1WcEhVMnhhV0ZaRmNGaFpWM1JoWVVaYWNWSnVUbGhTYTNCYVdWVmFiMWRHU1hsaFNHaFhWak5vYUZkV1dsWmxSMHBKVkcxb1UyRjZWbGRXUmxwaFpEQXhSMVZ1VGxkaGVteFlWVzE0ZDAxR1dsaGxTRTVhVm10d1dWWkdVa2RXTWtWNFZtcFNWMDFIVWxoVmFrcEhVakZrY2s1WGJHbFdNbWhoVm1wR1lWbFdiRmRWV0doVVltczFhRlV3VlRGaFJsWjBUbFZPYWxKc1duaFZNakExVmpGYWRGVnNhRmRpVkVaSVdWUkJlRll5U2tWVmJHaG9UVzFvVlZac1VrdFRNVTVJVW10a1ZtSkhVbTlVVmxwM1lqRlplRmR0UmxoaVZscFpWbGQwYjJFeFNYbGxSVGxYWWxSRmVscFhlR0ZTTVdSeldrZHdUbFpzYjNkV1YzaHZZekpLUjFOdVVteFNiV2hoV1d4U1YxSkdXWGRYYkU1WFZtdHdlbGRyVlRWaFZrcFpVVmhrV0dFeFdtaFdSRVpUWXpGa1dXRkdVbGhTTW1oWlYxWlNTMVZyTVVkaVNFWlVZVEpTVkZsWWNFZFhiRnBZVFZjNVZrMXNXakJhVlZwelZqSktXVkZzUWxkV1JWcHlWV3BLVDFKc1duTlViV3hUVFZWd1ZsWnJXbUZaVjFGNFdraE9ZVk5GY0ZsWmJGSnpZakZXY1ZKdFJrNVNia0pYV1ZWak5WWXdNVlpqUkVKWFZtMW9jbGRXV2t0U2JHUnpVV3hhYUdFeGNHOVdha1pyVXpGS2NrNVdaR2hTYXpWWVZXMTRkbVZXV25STlNHUnNVakZhZVZSV1dtdFdSbVJJWVVab1YwMUhVVEJaTVZwWFpFZE9ObEpzYUZOaVJYQllWbXhrTUdFeFpFZFhiazVxVWxkNFlWUlZXbmRWUmxweFVteHdhMDFXY0hoV1YzaDNWR3hLYzJKRVRsZE5WbkJvVjFaa1RtVldVbkphUmtwcFZsWndWVmRYZEc5Uk1WcFhXa2hLVjJKVldsVlVWM040VGtaYVdFNVdUbWhXYTNBd1ZsZHpOVmR0U2toVmJscFhWa1ZhYUZwRlZYaFRWbkJJWlVaT1YxSnNjRXRXYkdRMFlqSkplRmRZYUdGU1YyaHpWVzE0ZDFkR1VsWmFSazVyWWtkME0xWXllR0ZoTURGWFkwUkdXR0V5VW5wV1IzaGhZekpPUlZkc1pHbFhSMmhWVmxkd1IyRXhTWGhVYmxaV1lsaG9WVlZxVG05WFZscEhXa2hrVjAxV1draFdNblJYVlRKRmVsVnVSbFZXTTAxNFZUQmFjMk5zY0VaYVJscE9WbTVDTmxadGVHOWlNVmw1VTJ4V1UyRnNjR2hXYkZwM1lVWndSbGRyT1dwaVJuQjZWbTB4YzFaR1NsWmpSa1pYWWtkT00xUldXa1prTURGWlZHeG9hV0pGY0hoV1YzaFhaREpOZUZadVVteFRSVFZRVlcxNGQxTldVbk5XYWtKWFRXdHdWMWt3Vm5OV01WbDZWRlJHVjJKVVJraFpNbmhyWTIxV1IxcEdUbWxUUlVwMlZtMHhORmxXU1hsVmEyUlVZbXMxYUZWc1VsZGlNWEJZWlVad1RsWnNjSGxXVjNSclYyeFpkMVpxVmxaaVZGWlFWbXRhYTFOSFZraFBWbHBwWW10S05sWnRNVFJaVjFKR1RWWm9VRlpyY0U5V2JYUjNWMnhrYzFadFJtdE5hM0JJVmpGb2IxWkhSWGxoUm14YVZrVmFNMVJVUm1GalZrNXlXa1U1YVZKWVFsZFdWekUwWVRKR1YxTllhRk5YUjFKWlZtcE9RMU5HWkZkWGJYUlRUVlUxZWxsclpITlZNREYwWVVaV1dGWXpVbGhhUkVwSFVqRndSMXBHV21oTk1VcFlWa1phWVdReFRrZFhXR3hQVmxoU1dWVnFRbmRsVmxKellVVmtWMVpzYkRaV1Z6RnZWbXN4UjJOR1pHRldiRlkwVm14YVYyUkhSa2RhUjJoT1RVVlpNRlp0ZUdGaE1sRjRWMWhvV0ZkSGVGVlphMXBoVlRGc1dHVkZkR2hTYkZwNVZtMDFhMVpXU25OWGJtaFdZbGhOTVZsVVJtRmphelZaWWtaV1RsWnVRakpXYkZKQ1pESldXRkpyWkdoU2JWSndWbXRXU21Wc1pITldiWFJVWWxaYVNGWnROVXRaVmtwMFlVYzVWVlpzY0ROV2JGcHJWMGRXUjFwR2NGZGlWa3BaVm0wd01WSXhWblJUYkZwWVlrWmFWMWxzVWtkV1JuQlhWMnh3YkZaVVZsbGFSV1J2VlRKS1NWRnFWbGhXTTFKVVZtcEdhMk14WkhOYVJsSm9UVEpvV1ZkV1pEQlNNRFZIVjI1R1ZHRjZiRlZWYWtKaFUwWmtjbGR0ZEZaTlZuQXhWVmR3VjFZeVNrZFRhMUpZVm14d1YxcFdXbE5rVmxaelZXMW9UbUpGY0ZwV01XUTBZVEExUjFwR1pGZGlhelZZV1cweFUxUXhVbGRYYm1Sc1lrZFNlVmxWWkRCV2F6RkZVbXhrVlZac1NsQldiR1JMVTBkR1IxRnNaRTVTTVVwTlYxUkplRlF4VGtkVGJrNVhZa2RTVkZZd1ZrdFdiRnAwWkVaT1UwMVhlRmxXUjNoclZUSktjMU5zVWxwaE1YQk1WbXRhYzJOc2NFVlVhelZYWWtoQ1NsZHNWbUZoTVZKelUyNU9hbEp0VWxaV2JYaDNZMnhzV0dWRk9WUldhMW93VlcxNFYxWXhXblZSV0hCWVZrVnZNRmRXWkU5V01WSjFVMjFHVTAwd1NuWlhiR1EwV1Zaa1IxZHJWbE5pVlZwWVZGWmFjMDVXVlhsa1NFNVdZbFZhZWxrd1dtOVhiVXBJWVVoYVdsWldjR2hWYkZwUFkyczVXR1JHVG1sU2JrRXhWbXBLTUdFeFNYaFdXR1JPVjBaYWIxVnRNVFJYUm14ellVWk9hRkp0VWxoV01uTTFZV3N4V0ZWc2NGcFdWbkJvV1ZWVmVGSldXblJoUm1ScFZrVkpNRlpIZEdGaE1VbDRXa1pzYUZJeWFGVlZiRkpYVjFaYVIxcEVRbXROYkZwWVZsYzFUMWRIU25KT1ZteGFZVEZ3TTFWcVJscGxWVEZZVDFaa1RsSkZXbGxYVkVKcllqRnNWMU5zYUZaaVIyaFhWRlphZDAweFZYZGFSV1JUVFZaS01GbHJXazloVmtsNlZWUkNWMkpVUlhkWFZscHpWakpLUjJGR1RsaFNNbWhaVm1wQ2ExVXhVWGhYYmxKT1ZucHNXRlJXWkRSWFZuQkdXa1ZrV0ZKcmNIcFpNR2h2VmpGSmVsUllhRmRTTTJob1dYcEtUMU5YUmtkWGF6VnBZa1ZaZWxadE1UQlpWbXhZVkc1T1lWTkdXbkZWYlRWRFlqRlNWMkZGVGs1aVIxSllWakl4UjFaSFNsZFhhMmhXVFc1b2VsZFdXa3RrUmxaeVQxWmthVlpHV2tWV2FrSmhXVlpKZUZwSVVsTmlSMmh3Vm0xNGQxTldaRlZSYkdSb1RXdGFXRlV4YUhOaVJrcHpVMnhhVjJFeFdreFdSVnBoWXpGa2RGSnRkRk5OUkZaSVZqSjBZVlV4VW5OWFdHaFVZa2Q0V0ZSWE5WTmhSbXh4VTJ0MFUwMVZOVnBYYTFwdllWWmFWMk5HYkZoV00yaFVWV3BHWVZJeFdsbGFSbWhwVmxad2VGWkdaREJaVms1elYydG9iRkp0VWxaWmExcDNUVlpXV0dWSVpGZE5hM0JKVmxaU1ExZHRWbkpYYldoaFVsWndURnBHV2s5ak1WWjBZVWRvYkdKR2NHRldiWFJoWVdzeFdGTlliRmRpYXpWWldXMTRTMk14Vm5GVWJFNXFWbXhLV0ZsVlZrOVdSa3AwVlc1c1dHRXlhRkJXYWtGNFYwWldjbHBHV2s1aGExb3lWbTF3UzFNeFpGaFNhMnhUWWxWYVdGWnFSa3RVUm1SelZtMUdhRTFYVWxsVmJYUnJWbTFLV0dWSE9XRldNMmhvVkd0YVlXTXhhM3BhUjNoVFlrWlpNVlpYTVRCaE1XUklVMjVLVDFadGVHRlpiRkpIVmtaWmVGZHNaR3RTVkVaV1ZWZHpOVll5U25KVGJHaFhZbGhvVkZacVNrZFNhekZYVjIxc1UxSnJjRmxXUm1NeFZUSlNjMWR1UmxOaE0wSnpXV3hXWVZOc1ZYbGxSM1JYVFZWd1dsVlhjM2hXTVZwR1YyMW9WbUZyY0U5YVZscFRZMnh3U0ZKc1RrNWlWMmd5Vm10YVlXSXhSWGRPVm1SWVltdHdXVmxyWkZOWlZscDBUVlpPVGxKc2NEQmFWV1F3VmpGSmQyTkZiR0ZXVjAweFZtMHhTMVpXU25WWGJIQk9VbTVDTmxkVVNqUlpWMUpYWTBWa1lWSXllRlJVVmxaM1dWWlplV1JHWkdoTlJFWklWbFpvYjFaR1pFaFZia0pXWVRGd1RGWXdXbk5qTVZaeldrWlNVMkpJUWxwV1JscFhUVVpaZVZOcmFGWmlia0poV1ZSR2QyRkdiRmRYYlVaVFlrWndXbGRyV210Vk1rcEhZMGM1VjJKR1NreFdSekZYVWpGd1NWWnNVbWxTVlhCWlYxZDBiMUV4VmtkWGJsSnNVbnBzVTFsc1drZE9SbVJ5WVVVNVYwMXJjRWRVYkZwUFZsWmFkRlZVUWxkTlJuQmhXbFprVjFOSFVraGhSMnhUVjBWS2FGWXhXbGRoTVVsNFdraE9XR0V4Y0ZsWlYzTXhWMVphZEdWSVpFNU5WbHA2VmpKek5XRnRSalppUm1oWFVucEdlbFpyV2t0V2JVNUdZMFprYUdFeU9UTldNVnBoVlcxV1IxWnVWbFJoZWxaWlZXMTBkMlJzV2xobFJrNVhUVmRTU0ZscmFFOWhSa3B5VGxoR1YySlVWa1JXYWtaYVpWZFNSVkZ0YUU1V1dFSTJWMVJDVTFJeFdYaFRXSEJvVW10S1lWWnRNVk5TTVhCWVpVVmthMVl3V2toWGExcHJZa2RGZDJFelpGZGlXR2hVVldwS1JtVkdUbGxpUmxab1RXeEtkbFpYY0U5Vk1WcEhWMWhrVjJFelVsZFZiWGgzVjFaU1ZtRkhPVmRoZWtaNlZqSjRiMVl3TVhWaFNGcGFWa1ZhVEZWdGVFOWpNWEJIVm14a1YyRXpRa3BXYlRGM1VqRlZlVlJZYUZoaWJFcFJWbTB4VTFReFZuSldiVVpQVW14d01GUldVbE5WYXpGWFlrUk9WVlpzV25aV2JURkdaVzFHUjFwR2NGZE5NVXB2Vm14V1lXUXhTbk5YYkZaWFlrZFNUMVp0TlVOT2JGbDVaRWQwYWsxV2NFaFZNbmhoVjBaYVJtTkdhRnBXTTFKb1dWVmFZV05XU25WVWJHaFRZVE5DWVZkV1ZtRmlNV1JIVTFoc2FGTkhhRmhXYWs1dllVWmtWMWRzV214U01IQktWa2N4YjFVeVJqWldiR1JYVW14d2FGcEVRWGhTTVZaMVZHeGthR1Z0ZUZsV1Z6RTBaREF4UjFkc2FHeFRSVFZoVm0xMGQxZFdXa2RWYTJSWFRXdFdORlp0Y0ZOV01ERklWV3hvVm1GcmNFaFZha1pyWTJzMVdHSkhiRmROYldob1ZtMXdSMWxXYkZkaVJtUldWMGRvVlZsdGN6RmhSbFYzVmxSR2FGSnNXakJVYkZaUFlXeEtjMWR1YUZaTmFrRXhWbXBHWVdSR1ZuTmhSbVJwVmtWYVNWZFdVa0psUmxsNVUydFdWbUpIYUc5VVZ6RnZWbFphYzFWcmRGUk5WVFZKVlcxMGExWnRTa2hWYlRsVlZteHdNMWxxUmxwbFJtUjBVbXhvYVZac2NGcFdiR1F3WWpKRmVGTlliR3hTVkd4WVdXeFNSbVZzY0ZobFIwWlRUVmRTZWxkclpIZFViRnB6WWpOa1YxWXphSFpaZWtwTFVqRk9kVlZ0ZUZOaVYyaG9WMWQ0VTFZeFNrZFhXR1JZWWtVMVdGWnRkSGRsYkdSeVZsUldhRlpyY0ZwVlZtaHJWMGRGZUZkdGFGZFNSVnBVV1hwR2ExZFhSa2RWYkdoVFRXMW9XbFl4V2xOVE1WWnlUVlZrYVZORldsVlpWRXBUVmtac1dXTkZaRmhpUm5CWlZGWmpOVlpyTVhOWGFrSmhWbFp3ZWxacVNrdFhWa1p6VVd4a1YxSldjSGxXVjNCTFZERktjMWR1VGxWaVYzaFVWRlpXZDFac1duSlhiVVphVmpGR05GZHJhRTlaVms1R1kwWnNXbUpHU25wWmFrWlhZMVpLZEZKck5WTmlhMHBZVjFaV2FrNVdXWGROVmxwcVVrVktXRlp0TVc5amJHUlhWMnQwVTJKSFVucFZWM2hoWVVkRmVHTkhPVmRoYTFweVZYcEdTMk5yTlZkYVIyaFRZWHBXV1ZaWE1UUmtiVlpYVjI1U1RsTkhVbk5WYWtaaFpWWlNWMWR0ZEZkU2JWSkpXVlZhYjFZd01VaFZWRUphVFZad1dGcEZaRTlPYkVwellVWk9hVkpZUWxsV2JYaHJUVWRGZUZwRlpGaGlhelZ4Vld4a05GbFdVbFpYYm1SV1VteHdlRlZ0ZUhkaE1ERlhZMGhvVjFZemFETldSM2hMWXpKS1JWUnNaRTVXYmtKdlZqRmFhMVJ0VmxkVmJrcGhVbXR3Y0Zac1duZFdWbVJZWkVjNVVrMVdjRmhYYTJoTFZqSktWbGRzVmxWV00wNDBWR3RhWVZkRk5WZFViV2hYWVROQmQxWnNaSHBPVm1SMFUydG9WbUpzY0ZoV2ExWmhZVVp3UmxaWWFGUldia0pKV2xWYVQxWXhTbk5qUlhSWFlrZFJNRmxxU2twbFJtUlpZVWRHVTFZeWFIcFdWekUwWkRGa1IxVnNXbUZTYXpWeVdXdGtNRTB4V1hsbFIwWm9UVVJHV0Zrd1VrZFhSMFY1Vlc1d1YxSXphR2haZWtwUFVsWmtjMXBIYkZoU01taFdWbXhrZDFJeVJYaFRXR2hWWW14YVYxbHNhRzlXVmxaeFZHMDVXRlpzY0VoWGEyaHJWakF4VjFkcmFGZE5ibEpZVmxSS1JtVnNWblZTYkZaWFRUQXhORlpVUW1Gak1rNXpZMFZhWVZKc2NFOVdiVFZEVG14YWRHVkhPV2xOVm13MVZUSjRWMVV5Um5OalIyaFhZa1p3TTFsVlduZFNiR1J5VDFkd2FWSnVRalpXYlRCNFl6RmFSMU5zV21wU2ExcFlXV3RrVDAweFVsZFhhMXByVFVSR1dsWkhlRzloVjBwR1kwaG9WMVl6YUZoYVJFcE9aVVphZFZWdGVGUlNWRlpSVmxjeE5HUXhUbGRWYms1WFlXdEtXRlJYZEhkV01XdDNWbTVPVjAxV2JEWldSbEpIVmpKS1ZWSnJhRnBOYm1oeVdUSXhWMUl4Y0VkVWJXeFVVbFZ3TWxadE1IaE9SbXhYVTFoc1ZtRXlVbFZaYlhNeFlVWldjMVZzWkdsTldFSlpXbFZhZDFSc1duTmpTR3hYVmpOU2NsWXllRnBrTVZweFZteGFhVlpHV2xGV2JYUmhZVEZPU0ZacmFGQldiSEJ3V1cxMFMwNXNXblJOVkZKYVZqRktSMVJXV205VlJscHlZMFU1VjJKWVVqTldNbmhyWXpGYWRGSnRkRTVoTTBKSlZtcEdiMkl4V2toU1dHeG9VbTE0WVZaclZtRk5NVkpWVW0xR2FsWnJOWGxYYTFVMVlWWktXVkZzWkZkV2VrVXdXVlJLUjFZeFRsbGhSazVZVWpGS1dsWnRjRTlSTVU1SFdrWmtXR0pZVWxSVVZsVXhaV3hzY2xwSVRsWk5SRVl3V1ZWYVYxZEdXWHBWYkdoaFVrVndTRlZxUm5kU01YQkhWMjFvVGsxVmNGbFdhMXBoV1ZkUmVGUnJaRmhYUjNoUVZteG9VMWRXVm5GUmJtUnNWbXhLZWxsVlZtdFdNVnB6WWtSYVYxWjZSblpXYlhONFVqSk9SMXBIUmxkaVJsa3dWbTE0WVZZeVVraFNhMlJoVWpKb1QxUlZWbHBOUmxwMFpVZEdhRTFzUmpSV01XaHZWMFprU0dWR1ZscGhNWEJvVmxSR2MxZEhWa1prUjJoVFlrWndOVlp0TURGaE1WcFhVMjVPV0dKdGFGZFpiR2hPVFZac1ZWSnRSbXBoZWxaYVdXdGFWMVJzV25WUmFrcFhZa1pLUTFwRVNsZFhSa3B5V2tkb1UySldTbmRXYlhSWFUyMVdjMXBJVGxkaVdGSlZXV3hhWVZOR1duUk9WWFJhVm10d01GbFZZelZXVmxwelkwUk9WMkpHY0hKV01HUlhVakZ3UjJOR1pHbFdhM0JhVm0wd2QwMVdTWGhXYmxKVVlrWndXVmxyV21GV01XeHpWV3RrVjFKdVFsaFdNbmgzWWtaYVZWWnNiR0ZTVjFKMlZsUktTMU5XUm5GV2JHaFhUVEZLVlZadGNFZGhNazE0V2toT1lWSnNTbTlVVkVwdlYxWmtWMXBFUWxOTlJGWklWakkxUjFaSFJqWmlSbFpXWVd0S2FGVXdXbXRqYkdSMFpFWmFUbFp1UVhoV1ZtUjNWakZaZVZOclpGUmhNVXBaVm0xNGQxWXhjRmRYYkU1clZteGFlbFpYTVc5VWJVcEdZMFp3VjAxWFVUQlpWRUV4VWpGd1IxcEdaR2xoZWxaWlYxY3dlRlV4VVhoVmJHUllZbTFTYzFsclpGTmxWbXhXV2tSQ1YyRjZSa1pWYlhoclZsWmFjMU5zUWxkaVIxSk1WVEJrUjFJeFJuTmFSVFZUVFZWd1RsWXhVa3BsUmxGNFZHdGtWR0pyTlZoWmEyUlRWa1paZDFacmRGZGlSbkF3V2tWYVQxVXdNVmhsUm14WFVqTm9jbFpVU2t0ak1VNXpWV3h3YUUxWVFrMVdiWFJoWXpKT2MyTkZWbFZoZWxaWVdXdG9RMU5zWkhOV2JYUlRUVlp3VjFSV2FFdFhSMHBJWVVaa1ZWWXpRbGhXUlZwelYwZFdSbVJHVG1sU1ZGVjNWbGN4TkdFeVJsZFRibFpTVjBoQ1dWbHJaRkpOUm1SWFdrVTVWMDFXU2pGVk1uaHZZVlprU0dGR1ZsaFdNMUoyVlZSR2MxWXhjRWRhUm1ScFYwWktWVlpHV21GV01EQjRWV3hhYUZORk5XOVZiWFIzVTBacmQxZHRPVmhpVlhCSldWVm9ZVmRzV2xkalJtaGFUVlp3VEZwRlpGTlNNa1pIVkcxb1RrMUZhM2hXYWtaaFZqSkZlVlZZYUZkWFIxSlBWakJhWVdJeFZuUk5WRkpZVW0xNFdWcEZWakJYUmtwelYxUktWbUpZVFRGV1ZFRjRWMFpXY1ZKc1pGZGxhMWw2Vm14U1IyRXhTWGhVYms1VFlrZFNXRnBYZEVwTlJscElaRWRHYUUxVmJEUlhhMmhQWVVaS1ZXSkdhRnBYU0VKWVZqRmFZVmRIVGtaVWJYUk9Za1p3V1ZkV1VrOWhNV1JJVTJ0b1ZtSkhlR0ZaVkVaM1RURldjVkpzY0d4V1ZFWlpWREZhYTFSc1NrWlhhMnhZVmtWS2NsbHFSbXRqYXpGWlZtMW9VMDF0YUc5V1Z6RTBaREpPYzJFemJHcGxhMXBZVkZaYVMwMUdiSEpYYkU1V1RWWndXbFZYZEhkV01rcFZVbFJDV2xaNlJsaFZiWE40Vm14a2NrNVdaRmROYldoV1ZtMXdRMkV5U1hoWGJHUnBVMFpLY1ZwWGRHRlhSbHAwVFZSU1RsSnNTbGhXVjNoUFYwZEtSMk5FUW1GV1ZuQm9WbTB4UzFaV1duVlRiR1JPVW01Q1RWZHJWbXRXTVVsNVVtdGtZVkpVVm5CWldIQkRUa1phZEdWR1RsUk5WVEUwVlRJMVMxUXhXblJsU0VaV1lsaG9NMVl3V2xOV1ZrNTBUMWQ0VjJKV1NsbFdha2w0VWpKR1JrMVdXbXBUU0VKWVZXNXdWMVJHV2tobFIwWnJVakJhU0ZsVldsZFdNVXBXWTBVeFYxWkZXbWhaVkVaYVpVWmFkVk50UmxOaVYyaDNWbTB4TkdReFRuTlhia3BoVWtWS1lWWnRNVFJYUmxWNFlVaE9hRkpyY0hwVk1uaGhWakpGZUZkdGFGZFNWbkJvV1hwR2EyUkdTbk5VYXpWWFlraEJNVlpxU2pCWlZsVjRWVzVPV0dKc1NuSmFWM1JMVjBaU1dFNVdUbWhTYlhoNFZUSjBNRlV3TVZaT1ZuQllZVEZ3ZGxsV1dtRldNazVIWWtab1YySldSak5XTVZwclVqRkplVlJyWkdoU00yaFVXVzEwUzJWc1duUmxSazVYVFZkU1NGWXlkRzlpUmtwMFZXeGFXbUV4Y0ROVVZscFhWakpHU0dSR1pFNWhNMEpLVm10a2QxUXhXbGhUYTJScVUwVndhRlZzV25kVVJsbDRXa1ZrVTAxcldrbFpWV1J2WWtkS1IyTkhSbGRoYTFweVZHdGtTbVZXVGxsaFIwWlRWakZLZUZaWGVHRmtNa1pIVm01U1RsWnJOVmhWYlRFMFYyeHJkMkZGT1ZoU2EzQXdWbGMxYzFZd01YRlNXR1JhVmxad2FGa3ljekZXYkhCSFYyczFhV0pYWkRaV2JURjNVekZOZUZwR1pGTmlhM0J6VldwQ1lWWkdWbk5YYm1SV1VtMVNlbFp0TVRCV1JURldZa1JTV2sxR1duSlpWVnBLWlZkV1NFOVhSbGROTW1odlZrZDBZVmxYVFhoV2JrcFZZa2RTVDFsclZscE5SbGw1WkVaa2FFMXJXbGhXUjNSaFlXeEtkR1ZIUmxwaVJrcElWbXRhV21ReFpITmFSM1JUVmtaYVdGWnJaRFJVTVZKelYxaG9WR0ZzV2xoWlYzUjNUbXhTYzFkc2NHeFNhelV4VlRJeGMxVXhTbkpqUm1oWFVtMU5lRlpVU2s5ak1XUjFWRzFHVTFkR1NsVldSbVI2VFZaT1IxWnNhR3hTTTFKWVZGWldkMWRzVmxoak0yaFhUVlp3UjFVeWVHdFdWMHBIWTBaQ1YwMUdjRXhaTW5oM1UwWktjMVJyTldsV01tZDVWbTEwWVZsWFNYaFNXR1JQVm0xU1dWbHRkSGRYVm14eVdrWk9XbFpzY0RCVVZscFBWR3hLYzJORVFtRlNWMUYzVmpKNFlXTnRUa1ZSYlVaWFZqQXdlRlp0TUhoVE1XUllVbXRXVldKSVFrOVZiVFZEVG14YWNWSnRkRlZOVld3MFdUQldhMWxXU1hsbFJsSmFZbGhTUzFSVldtRmpNV1IwWTBkNFUxWkZXa2xXYkZwdllqRmFTRk51U2s5WFJVcFhXVlJHZDFSR1pGZFhiazVYVm1zMU1GUXhXbXRWTWtwWllVWmtWMVo2UlhkYVJFcEdaREF4VjJGR1dtaGhNSEJZVjFkNGIySXlUbk5pUm1SWVlsVmFWRmxyV25kWGJHUnlWMjA1YUZacmNERlZWekExVmpKR2NtSkVVbGRoYTFwb1dUSnpNVll4Y0VoaFJrNU9UVlZ3VmxacldtcGxSMGw0VjJ4a1lWSnRVbGRaV0hCelZURlNWbFZzWkd4aVJtdzFXbFZhYTFZeFNuTmpSV1JYVFdwV1NGWnNXbUZqTWs1SlkwWldWMUpXY0ZWV2JYQkxVakZLYzJORlpHRlNWRlp2VkZSQ1NrMVdXWGhWYTA1YVZqQnNORll4YUhOVk1XUklZVVpzV2xaRmNIWldiWGh6VmxaS2RWcEdjRmRpYTBwWVZtcEplRTFIUm5SVGEyeFNZVEo0WVZSVlpGTmxiRnB4VW0xR2ExWnJXbmxaTUZwclZHeGFkVkZzYkZoV2JFcE1WVEl4VjFJeFduVldiRnBwVW10d2RsWkdXbTlSTVdSWFdrWmtZVk5JUWs5V2JURlRVMFphV0dWSGRGaFNNSEF3Vmxjd05WWnRTbFZTYkZKWFRVWndZVnBXVlRGV2F6bFhZVVpPYUUwd1NUSldiRkpMWkRGSmVGZFlhRmhYU0VKdlZXMHhiMWxXV25OWGJHUlBVbXhzTkZZeWRHdGhNVmwzWTBWb1dHRXhjSEpaYTJSR1pESkZlbHBHWkdsWFIyaFZWbGh3UjFReVVrZFhia3BoVW0xU2NGbFljRmRpTVZwWVkwVjBhVTFXY0VoV01qVlBWbTFLU0ZWc1pGWmlWRVpVVmpGYWQxSnNjRVphUjJoT1VrVmFSMVpYTVRCaU1XUnpWMnRhVDFkRmNGaFpWM1IzVkVaWmVGZHNaR3RTVkd4WVdUQmFiMVpHU2xaalJYQlhZbGhDUkZkV1pFOWtSbFpaWWtaT2FFMXVhRmRYVjNSclZURmtSMkpJU21oU1ZUVlFXV3RrVTFac1ZsaE5SRlpvVFVSR1dGbHJVbGRXYXpGMVZXNWFWMkpVUmtkYVZ6RkhVakZ3UjFac1pGZE5WWEJXVm14U1ExbFdXWGxVYkdSVlltdHdjbFZ0Y3pGVU1WcHhVbXR3YTAxWFVsaFdiVEV3WVZVeFYxTnVjRmhoTVZwb1ZtdGtSMDV0U2tkaFJuQnBVbXR3UlZaR1VrZGtNVnB6VjJ4V1UySkZOVTlaVkU1RFUxWlplV1JIUmxaTlYxSklWVEZvYzJGR1NuVlJiR3hYWW01Q1NGUnRlRk5XTVdSMFpFWmtUbUV6UWtsWFYzUnJaREZWZVZOc1pGUmlTRUpZVm01d1EwNUdVbkphUm1SWFRWZFNNVlpYY3pWV01EQjRVMnhzVjFaNlJUQmFSRUY0VWpGa2MyRkhlRlJTVkZab1ZtMHhNR1F4WkZkWGEyUldZVEpTV0ZSV1duZFNNVlowWTBaT1YwMXJXbmxaTUZwRFZtMUtWVkpyZUZaaGExcHlXVEp6TVZkSFNraGlSazVZVWxWc05WWnRNSGRsUlRGSFZsaG9WRmRIYUhCVmJURnZWbXhaZDFwSE9XaFNiRll6Vm14U1IyRlZNVmRYYWtKVllrWmFVRmxYZUV0ak1XUjFZVVphVG1GclJYaFdhMk40VXpGT1IxWnVUbWhTYlZKd1ZtdFdZVk5XV25STldIQnNVbXhzTlZVeWRGZFdiVXBJWVVjNVZWWjZSblpXYkZwclZqRldjbHBHVW1sV2JIQTJWbGN3TVZZeFZuUlRhMlJxVWxSc1YxbHNhRzlOTVZwSFYyMUdXRll3TlVkWGExcHZZVlphYzJOR2NGZGlSMUYzV1dwS1JtVkdUbGxqUmtwb1pXMTRXVmRYZUc5aU1XeFhZMFpvYkZJd1dsUlVWbVJUWld4a2NscElaRlZpUm5CNldXcE9hMVl4V2taaU0yUmFZV3RhYUZwRldrOWpiVVpJWlVaT2FWWXlhRzlXTVdRd1lUSkplVlZ1VGxoaE1YQlpXV3hXWVZkR2JISmFSazVPVm14d1NWa3pjRmRoUmxweVkwWndWbFl6UW1oV01GcGhVbXhPZFZOc1ZtaE5XRUpZVjJ4YVlWTXlUbGRhU0U1aFVqSm9jRlV3Vmt0WGJGcHlWMjF3VGxac1ZqVlZiWFJyVjBkS1IxZHNWbHBXUlhCVVZtdGFjMWRYVGtaYVJsSnBVak5vTlZZeWRHcE9WbHB5VFZWV1UyRnJTbUZXYkZwM1RURlpkMWRzY0d4aVJsb3hWVEo0YTFZeVZuSlhiRkpZWWtaYWNsWkVSa3RqTVdSMVZHeFdhVll6YUZWV2JYUmhXVlphYzFkdVNsaGlXRkpQVlcxNGMwMHhVbk5oUlRsb1ZtczFSMWt3Wkc5V2F6RklWV3hTV2sxR2NGaFpNVnBIWXpGd1JrOVdUbWxYUmtZMlZtMXdTazFXVVhoYVJXUlVZbXMxY0ZWclduZFhSbHAxWTBWa2EySkhVbGhXTW5Rd1ZUSktWazVWYUZwV1ZuQXpXV3RrUm1WSFRrbGlSbVJvWVRGd2VWWlljRWRVTVU1SFYyNUtZVkpzV205YVYzaGhWVVphZEdWSE9WSk5WMUo2VmpJMVUyRXhTWGRYYlRsVlZsWktTRlV4V21GV01rWklUMVprVjAxSVFqVldSM2hoWWpGa2RGSlliRlppYkhCaFdsZDBZVmRHYkRaU2JHUnJWbXhLZWxsVldrOWhWa3BaVVcxR1YwMXVVbGhaYWtwR1pVWndSbUZHVW1oTmJXaDZWbGN3ZUZVeGJGZFhiazVoVW1zMVZWVnRlSE5PVm5CV1drVmthR0pWY0ZkVWJGWnJWMGRGZUdOSVNsZFNla1pNV2tWa1IxTlhTa2RhUlRWWFltdEtkbFpzYUhkU01VMTVWRmhvVldKc1dsUlphMXAzWTBaV2RFNVZUbFpTYkhBd1dUQldhMVpGTVZaT1ZtaFhUVzVvZGxsWGVFdFhSbFowVDFaV1YwMHlhRTFXVkVaaFZtMVdXRlZyYUd0U2JWSllWRlZvUTFkc1pITldiWEJQVm14d1dGWXllRzloUmtwWFUyeHNWMkpZYUROWlZWcDNVbXh3Ums5V1RtbFRSVXBKVjFSQ1lXRXlSbGRUYms1b1RUSlNXRmxyWkU5Tk1WSlhWMnMxYkZKc1dqRldSM2h2WVZkS1JtTkdhRmhXTTFKeVZsUkdhMUl4Vm5OWGJVWlRZWHBXZVZkWGRHRmtNbFpIVm01U1QxWlViRzlaYkZaM1UyeFdXR1JIT1ZkTlZXOHlWVzAxZDFZeFNYcGhSMmhhWld0d1VGVnNXbXRqTVhCSVlrWm9VMDF0YUZkV2JYaHJaREZKZVZKWWFGUlhSMmhvVlRCYVlWWnNiSE5oUlU1WFVteGFlbFp0Tld0aFZURlhZMFJDWVZaWFVraFpWRUY0WTJzMVdXTkdaRTVpYkVwWlZteFNTMU14V25OYVNGWlRZa1phV0ZscldsZE9SbVJ6V2tSU2FFMXJOWHBYYTJoVFlURktkRlZyT1ZaaE1WcExWRlphYTFZeFduUlBWM0JPVmpGS1NWWnFTVEZVTVdSSVUyeG9hRkp0VW1oV2FrNVRUVEZhUlZKdVpGZE5WMUo2VmtjeGQyRldUa1pUYTJ4WVZteGFjbGw2UmxabFZrNTFVMnhTYVZORlNsbFhWbEpIWkRGYVIxWnNWbE5oZWxaelZXMTRkMlZzWkhKWGJUbG9WakJ3UjFrd2FIZFdNVmw2VVd4Q1YxWkZXbWhWYWtwTFUxWlNjMkZIYkZkV2JrSmhWbTB3ZUU1R2JGWk5WV1JxVWxad2IxVnNVbk5YUmxKWFZtNU9UazFYZEROV2JUVlBWakF4VjJKRVdsZFNiRXBJVm1wS1MxWldTbkpsUm1ScFVtNUNiMWRVU2pSV01rMTVWR3RvYUZJeWFFOVdNRlpLVFZaYWNWSnNUbFJOUkZaSVdXdGFiMVp0UlhsaFJtUmFWa1Z3VkZadGVITlhWMDVIV2tab1UySkhkM3BXYlRFd1pERlNkRk5yWkdwU1JVcFdWbXhrYjJOc1draGxSMFpxVFZad2VGWlhlR3RoVmtsNVlVUmFWMkpZVW5KVmJURlhVMFpTY2xwR1NtbFNNVXAzVm1wQ2EySXhVbGRYYmtaU1lsVmFjVlJYY3pGbGJHdDNWbTEwVjFJd2NGcFdWM00xVmpKS1dWVnFUbGRoYTFwb1ZqQlZlRlpXVm5Sa1JUVm9UVEJLU2xadGNFZGlNa2w0VjJ0b1UxZEhlRzlWYlRFMFdWWmFjbFp0Ums1TlZrcFdWVzB4UjJGc1duSk9XR3hoVWxad1VGWkhlRnBsUms1eldrWmtWMlZyVlhkWFZsSkxVakZaZUZSc2JHaFNhelZaVldwR1MxZHNXblJOVkZKVVRWVTFTRmxyVW1GVk1rcEpVVzVPVm1KWWFHaFVWbHBXWlZVeFZscEdXazVoTTBKSVYxUkNiMkV4WkVkWGJrNVVZVEZLYUZWclZtRmpiRlp4VW01a1UwMXJXa2xhVlZwUFlrZEtXV0ZFVGxkaE1YQllWbFJHUm1Rd05WWmFSMnhVVWxoQ1dGZFhlRmRaVmxsNFZXeG9hMU5IVW5OV2JYaExaV3hzVmxadGRGZE5WbkI2V1d0U1lWWXhXalpTYmxwWFlsaE9ORlpxU2s5U01WSjBVbXhrVjJKclNqVldNVkpMWldzMVYxcEZhRk5oTWxKb1ZXcEtiMVF4VWxaV2JIQk9VbXh3TUZwVlpFZGhSVEZ6VW1wU1dtRXhjSEpXTUZwclUwWldjazlXWkdsV1JWcFZWbTE0WVdNeVRuTlhia3ByVW01Q1dGbHNhRzlYYkdSeVZtMDVhRTFXY0VoVk1qVlhWVzFGZVZWc2FGVldlbFpUV2tSR2MxZEhWa2hTYlhSVFlrWnZlRmRVUW1GaE1WVjVWbTVLV0dGc2NGaFphMXBMVVRGd1ZsZHRSbXRTYkVwNVYydGtiMVV5U2xkVGJtUlhZbGhTV0ZVeWMzaFNNV1J5WVVkMFUwMUdjSGhXUmxwclZURk9SMWR1VWs5V2JWSllWbXBDZDFOV2JGWmhSVTVZWWtad1IxWXljRTlXTWtwWllVaEtWMkZyV2xoWk1uaDNVMGRTUms1WGFHeGhNVll6Vm0weGQxTnJNVmRUV0doWFYwZDRWVmxyV25kWFZteHlWMjFHVjAxWGVIcFdWM1JyVmpGS2RWRnNhRmROYm1neldXdGFZVlpXU25OWGJGcFhaV3RhTWxac1VrdFNiVlpZVlZod2FsSnRVbkJXYTFaYVpXeGFkR05GWkZwV2JIQjVWRlphWVdGR1NYbGhSbFpXWWtkb1JGWXhXbXRXTVhCRlVXMTBUbFpYZHpCWFZFSmhXVlpzVjFOc1ZtbFNiRnBYV1ZkMFMyRkdWWGRYYms1WFlrZFNNRnBGWkc5V01rWTJWbXRvVjFaRmNETldha1phWlZaT2MySkdTbWhOVlhCYVZtMHhOR1F4V1hoalJtUllZa1UxY2xadGVFdE5SbXQzVjJzNVYwMUVSbGRaTUZKTFZqSktTRlZxVGxabGEwVjRWV3BHZDFJeGNFZGFSMnhwVWxoQ05WWnNVa05oTVZWNFYxaG9XR0pzU25OVk1HUlRWREZXZEdWRmRGaFNiWGhYVjJ0U1ExWXlSalpTYTFwV1lsaG9jbFpzV21Gak1VNXpVV3hrYVZJeFNrMVdWRUpyVWpGSmVGSnVUbWhTYlZKd1ZUQldTMVJzV1hsa1JtUmFWbXhzTlZaR2FITlZNa1Y1Vlc1R1ZtRnJiekJXYTFwVFYwVXhXRTlXVG1sU2JrRjNWMnhXWVdFeFpITlhibEpzVW0xNFdGWnFUbE5rYkZweFUydGFiRkl3TlVwVk1uaGhZVWRHTmxacVNsaFdSVXBvVm1wS1UxTkdXbkphUjNCVFZrWmFXVmRYZUdGVE1EVnpWMjVTVGxOSGFFOVZiWGhYVFRGU1YxZHRkR2hpUlhBd1ZsZDRZVll5U2xsaFJFNWFUVzVvZWxZd1pGZFNiVkpIWVVaT2FWSnVRVEpXYWtvd1dWWlplRmRZYkZkaWF6VlpXVmQwZDFkV2JGVlRiRXBPVW14c05WUldXbXRXTWtZMlVteG9WMDFxUlhkV1ZFcExVbTFPUjFac1pGTmlSbkJ2VjJ0U1IxUXhTWGhhU0ZaVllsVmFWRlZ0ZEhka2JGcEhXa1JDV2xacmJEUldWM2hyVjBkS2NrNVdaRnBpUmxvelZGVmFkMVpzWkhSUFZtaHBWbGhDU2xkV1ZsZFZNVnB5VFZWa2FsTklRbGhaYTFwM1ZVWnJlV042UmxoU01WcElWMnRrYzFVeFpFWlNXR2hYWVd0YWFGWnFTa1prTURGV1drWmtXRkl5YUZwWFZsSkxWVEZrVjJKSVNsaGlWVnBaVlcxNGQyVkdXa2hOUkZab1VtdHdNVlZYZEdGV2F6RjFWVzVLVjFaRlJqUldNRnBYWTFaS2MxcEdaR3hoTVd3MlZtMTRVMUl5UlhoVGJrNVZZbXhhY1ZWdE1WTlhSbkJZWkVaa1RrMVhVbHBaTUZaTFZHeGFjbUpFVWxoaE1YQjZXVlZhU21WWFJrZFZiRlpYVWxad1RWWnRjRWRoTVdSSVZXdG9hMUpzY0U5V2JGSlhVMVphY1ZKdE9XcE5Wa3A2VlRKMGExZEhTa2hoUjBaYVlURndhRll3V2xOamJHUjFVMjEwVGxkRlNrcFdSRVpoWVRGU2MxTnJXbGhoTW5oWlZtdFdTMk5zYkhGU2JYUnFZWHBHV2xadE1XOVZNREYwWVVac1dGWXpVbWhhUkVaVFVqSk9SbGR0UmxOaVZrcFdWbGR3UTJReFRrZFhhMmhPVjBVMVYxUlhkSGRYYkZwWFZXdE9WMDFyY0ZaVmJHaHJWMFphYzJOSWNGZGhhMXB5V2taYVQyTnJPVmRhUjJ4WFlUTkNZVlp0TVhkUk1rVjNUbFZrV0dKSFVuQlZNRlozWVVaV2RHTjZSbGhTYkhBd1ZGWlNVMVl5U2tkV2FsWlZWbFpLV0ZacVFYaFNWa3B6WVVaYVRtSnRhRFpXYlhoclV6Rk9SMVZzVmxOaVIxSnZWRlpvUTFSV1pGbGpSWFJWVFZVMVdWVnRkR3RYUjBwWVpVWnNWbUpZVW1GYVYzaGhaRWRXUjFSc1VrNVdWRVV3VmxSSk1WTXhVWGhYYms1WVlrWktZVmxVU2xOa2JHeHhVbXhPVjAxcldrZFdSekZ6Vkd4WmVGTnNjRmhoTVZweVZGVmFWbVZXVG5OYVJtaG9UVzVvV1ZaWGNFOVZNazV6VjJ4V1ZHRXpVbFZWYWtKaFUwWnNWbGR0Um1oV2Eyd3pWRlZvYTFkSFJYaFRhMmhZVm14d1lWcFZXbUZrVms1MFVteE9hV0V3Y0ZwV01WcFRVekF3ZDAxVlpGaGlhelZoV2xkMFlWWnNVbGhrUjBaWVVteFdOVlJzVmpCaFIwcEdZbnBLV21FeGNHaFdha3BHWlVaa2NWUnRSbE5OTW1ob1YydFNSMkV5VWtkVGJsSnJVbXMxVDFac2FFTlRiRnAwWkVkMFQxSnJNVFZWYlhSdlZqSktjazVXYkZwaE1sRXdWakJhYzFaV1RuTlRhelZUWWxob05GWlVTakJoTVZsM1RWWmtWR0p0ZUZoVVYzQkhUVEZhY2xkcmRGZE5helZJV1ZWYWEyRldaRWRUYkd4WFYwaENURlpxU2s1bFZsSnlWMnhrYVZKVVZuWlhiR1EwV1ZkV2MxZHNhRTVXUlVweVZGWmFkMlZzYkhKaFJYUllVakJXTlZaWGVHOVhiR1JKVVd0b1ZrMVdjRE5XYlhoWFkyczVWMXBIYkZkaVNFRXhWbTF3UzAxSFJYaFhiRnBPVm0xU2NWVnNXa3RYUm14VlVtNWtWbEpzYkRSV01uUnJZVzFLVjFkcmFGZE5ibWh5VmxSR1MxWnNXbGxoUm1SWFVsWndlVmRZY0V0VU1sSkhWVzVLVm1KR1NsbFZiRlozVkd4YWMxZHNTbXROUkd4WFdXdG9RMkZGTUhkU2JrSlVUVlUxZVZWR1RrcGpSWFJTVUZRd2FVdFRhejBpS1NrPSIpKQ=="))"))